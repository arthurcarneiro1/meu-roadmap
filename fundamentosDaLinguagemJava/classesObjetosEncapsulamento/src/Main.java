// ‚òï 1. Classes em Java
// Uma classe funciona como um molde ou uma "f√°brica" para criar objetos.
// Nela, definimos os atributos (caracter√≠sticas) e os m√©todos (a√ß√µes) que os objetos ter√£o.
public class Carro {
    // Atributos
    String modelo;
    int ano;

    // M√©todo para simular o som da buzina
    void buzinar() {
        System.out.println("Biiiiiii!");
    }

    // M√©todo para exibir as informa√ß√µes do carro
    void exibirInfo() {
        System.out.println("Modelo: " + modelo + " | Ano: " + ano);
    }
}

// üöó 2. Objetos em Java
// Um objeto √© uma inst√¢ncia (um exemplar real) de uma classe.
// Ele possui os dados e os comportamentos definidos na classe que o originou.
public class Main {
    public static void main(String[] args) {
        // Criando um objeto da classe Carro
        Carro meuCarro = new Carro();

        // Atribuindo valores aos atributos
        meuCarro.modelo = "Fusca";
        meuCarro.ano = 1975;

        // Chamando os m√©todos do objeto
        meuCarro.buzinar();       // Sa√≠da: Biiiiiii!
        meuCarro.exibirInfo();    // Sa√≠da: Modelo: Fusca | Ano: 1975
    }
}

// üîí 3. Encapsulamento
// Encapsulamento √© o princ√≠pio de ocultar os detalhes internos de uma classe
// e permitir o acesso aos dados apenas por meio de m√©todos p√∫blicos (getters e setters).
public class Pessoa {
    // Atributo privado (s√≥ acess√≠vel dentro da pr√≥pria classe)
    private String nome;

    // Getter: retorna o valor do nome
    public String getNome() {
        return nome;
    }

    // Setter: define ou altera o valor do nome
    public void setNome(String novoNome) {
        this.nome = novoNome;
    }
}
